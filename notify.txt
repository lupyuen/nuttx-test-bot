Notification { id: NotificationId(14669019291), repository: Repository { id: RepositoryId(228103273), node_id: Some("MDEwOlJlcG9zaXRvcnkyMjgxMDMyNzM="), name: "nuttx", full_name: Some("apache/nuttx"), owner: Some(Author { login: "apache", id: UserId(47359), node_id: "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5", avatar_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("avatars.githubusercontent.com")), port: None, path: "/u/47359", query: Some("v=4"), fragment: None
            }, gravatar_id: "", url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache", query: None, fragment: None
            }, html_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("github.com")), port: None, path: "/apache", query: None, fragment: None
            }, followers_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/followers", query: None, fragment: None
            }, following_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/following%7B/other_user%7D", query: None, fragment: None
            }, gists_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/gists%7B/gist_id%7D", query: None, fragment: None
            }, starred_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/starred%7B/owner%7D%7B/repo%7D", query: None, fragment: None
            }, subscriptions_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/subscriptions", query: None, fragment: None
            }, organizations_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/orgs", query: None, fragment: None
            }, repos_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/repos", query: None, fragment: None
            }, events_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/events%7B/privacy%7D", query: None, fragment: None
            }, received_events_url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/users/apache/received_events", query: None, fragment: None
            }, type: "Organization", site_admin: false, patch_url: None, email: None
        }), private: Some(false), html_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("github.com")), port: None, path: "/apache/nuttx", query: None, fragment: None
        }), description: Some("Apache NuttX is a mature, real-time embedded operating system (RTOS)"), fork: Some(false), url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx", query: None, fragment: None
        }, archive_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/%7Barchive_format%7D%7B/ref%7D", query: None, fragment: None
        }), assignees_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/assignees%7B/user%7D", query: None, fragment: None
        }), blobs_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/git/blobs%7B/sha%7D", query: None, fragment: None
        }), branches_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/branches%7B/branch%7D", query: None, fragment: None
        }), collaborators_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/collaborators%7B/collaborator%7D", query: None, fragment: None
        }), comments_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/comments%7B/number%7D", query: None, fragment: None
        }), commits_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/commits%7B/sha%7D", query: None, fragment: None
        }), compare_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/compare/%7Bbase%7D...%7Bhead%7D", query: None, fragment: None
        }), contents_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/contents/%7B+path%7D", query: None, fragment: None
        }), contributors_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/contributors", query: None, fragment: None
        }), deployments_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/deployments", query: None, fragment: None
        }), downloads_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/downloads", query: None, fragment: None
        }), events_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/events", query: None, fragment: None
        }), forks_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/forks", query: None, fragment: None
        }), git_commits_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/git/commits%7B/sha%7D", query: None, fragment: None
        }), git_refs_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/git/refs%7B/sha%7D", query: None, fragment: None
        }), git_tags_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/git/tags%7B/sha%7D", query: None, fragment: None
        }), git_url: None, issue_comment_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/issues/comments%7B/number%7D", query: None, fragment: None
        }), issue_events_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/issues/events%7B/number%7D", query: None, fragment: None
        }), issues_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/issues%7B/number%7D", query: None, fragment: None
        }), keys_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/keys%7B/key_id%7D", query: None, fragment: None
        }), labels_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/labels%7B/name%7D", query: None, fragment: None
        }), languages_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/languages", query: None, fragment: None
        }), merges_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/merges", query: None, fragment: None
        }), milestones_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/milestones%7B/number%7D", query: None, fragment: None
        }), notifications_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/notifications%7B", query: Some("since,all,participating}"), fragment: None
        }), pulls_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/pulls%7B/number%7D", query: None, fragment: None
        }), releases_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/releases%7B/id%7D", query: None, fragment: None
        }), ssh_url: None, stargazers_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/stargazers", query: None, fragment: None
        }), statuses_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/statuses/%7Bsha%7D", query: None, fragment: None
        }), subscribers_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/subscribers", query: None, fragment: None
        }), subscription_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/subscription", query: None, fragment: None
        }), tags_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/tags", query: None, fragment: None
        }), teams_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/teams", query: None, fragment: None
        }), trees_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/git/trees%7B/sha%7D", query: None, fragment: None
        }), clone_url: None, mirror_url: None, hooks_url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/hooks", query: None, fragment: None
        }), svn_url: None, homepage: None, language: None, forks_count: None, stargazers_count: None, watchers_count: None, size: None, default_branch: None, open_issues_count: None, is_template: None, topics: None, has_issues: None, has_projects: None, has_wiki: None, has_pages: None, has_downloads: None, archived: None, disabled: None, visibility: None, pushed_at: None, created_at: None, updated_at: None, permissions: None, allow_rebase_merge: None, template_repository: None, allow_squash_merge: None, allow_merge_commit: None, allow_update_branch: None, allow_forking: None, subscribers_count: None, network_count: None, license: None, allow_auto_merge: None, delete_branch_on_merge: None, parent: None, source: None
    }, subject: Subject { title: "Add support to Serial Error Reporting ioctl", url: Some(Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/repos/apache/nuttx/pulls/15780", query: None, fragment: None
        }), latest_comment_url: None, type: "PullRequest"
    }, reason: "mention", unread: true, updated_at: 2025-02-07T02: 30: 13Z, last_read_at: None, url: Url { scheme: "https", cannot_be_a_base: false, username: "", password: None, host: Some(Domain("api.github.com")), port: None, path: "/notifications/threads/14669019291", query: None, fragment: None
    }
}